#;global section
[database]
driver = sqlite		#;sqlite, postgres, or mysql
file = 'users.db'	#;for sqlite only
host =				#;[TODO] For Postgres and MySQL
user =
pass =
cipher =
encrypt =
sshScript =			#;Script to run before connecting; i.e. for SSH tunnelling TCP

[interface]
fullScreen = False
libnotify = True
windowX = 1020
windowY = 682
banner = resources/banner.png
backgroundColour = '#E3D2B4'

[logging]
file = error.log
remote = False		#;[TODO] implement remote logging(?)
host = 
port =

[report]
enabled = True							#;enable local file archiving/reporting
format = csv							#;csv, txt, or ods (or xls [ughhhh!])
directory = 'archive/'					#;where to save local archived reports to
file = '{hostname}-%Y-%m-%d.csv' 		#;formatting follows strftime() directives.
[[email]]
to = 'journeytaxidi@gmail.com'
from = 'journeytaxidi@gmail.com'
subject = '{hostname} - Taxídí daily check-in report'
preamble = 'Report attached.'
host = 'smtp.gmail.com:587'				#;host:port
TLS = True								#;Use ssl/tls?
user = 'journeytaxidi'					#;SMTP auth username (if required)
pass = 'paiSh4xelohvae5A'
[[remote]]
enabled = False							#;[TODO] remote logging to an accumulator server? [HTTP(S)]?
method =
host = 
user =
pass =

[authentication]
method = local			#;none, single, local (using sqlite), database, unix?, kerberos?, ldap?
enforce = True			#;enforce password protection?
table =					#;table in SQL database which contains: (user text; hash text; 
hash = '0d890f617f6b897a3998b9f92138b70fda10a332'  #;SHA password hash for single user mode.






